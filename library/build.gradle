apply plugin: 'com.android.library'
apply plugin: 'findbugs'

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--abbrev=0', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 21
        testApplicationId "com.sonymobile.android.media.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        testHandleProfiling true
        testFunctionalTest true
    }

    buildTypes {
        debug {
            buildConfigField "String", "LIBRARY_VERSION", "\""+"DEBUG"+"\""
            buildConfigField "boolean", "LOGS_ENABLED", "false"
        }

        release {
            buildConfigField "String", "LIBRARY_VERSION", "\""+getVersionName()+"\""
            buildConfigField "boolean", "LOGS_ENABLED", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

    }
}



android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    task.archiveName = 'MALâ€”vrviu-v'+getVersionName()+'.jar'
}